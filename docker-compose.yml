services:
  mysql:
    image: mysql:5.7
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: airflow
      MYSQL_USER: airflow
      MYSQL_PASSWORD: airflow
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./db/my.cnf:/etc/mysql/my.cnf
      - ./db/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    command: --sql-mode="ALLOW_INVALID_DATES"
    networks:
      - wizbi-proxy-net    

  airflow:
    build:
      context: ./airflow
      dockerfile: Dockerfile
    image: wizbi-airflow:latest
    container_name: airflow
    depends_on:
      - mysql
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: mysql+mysqlconnector://airflow:airflow@mysql:3306/airflow
      AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
      AIRFLOW__WEBSERVER__RBAC: 'True'
      AIRFLOW__CORE__FERNET_KEY: 'ZmDfcTF7_60GrrY167zsiPd67pEvs0aGOv2oasOM1Pg='
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'False'
      AIRFLOW__CORE__DAGBAG_IMPORT_TIMEOUT: '300'
      AIRFLOW__CORE__TEST_CONNECTION: 'Enabled'
      AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.basic_auth'
      AIRFLOW__WEBSERVER__AUTHENTICATE: 'True'
      AIRFLOW__WEBSERVER__AUTH_BACKEND: 'airflow.contrib.auth.backends.password_auth'
      AIRFLOW__WEBSERVER__SECRET_KEY: 'kjkjdyai'
      BATCH_SIZE: 500000
      GA_DAY_DATA: 20
      ENCRYPTION_KEY: ZmDfcTF7_60GrrY167zsiPd67pEvs0aGOv2oasOM1Pg=
      AIRFLOW__VARIABLES__CONFIG_FILE: /opt/airflow/variables/variables.json
      AIRFLOW__CORE__MYSQL_CONNECTION_CREATION: 'Enabled'
    ports:
      - "8081:8080"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/dags/requirements.txt:/requirements.txt
      - ./airflow/variables:/opt/airflow/variables
      - ./airflow/dbt_profiles/:/root/.dbt/
      - ./airflow/extra/entrypoint.sh:/entrypoint.sh
    command: >
      bash -c "sh /entrypoint.sh && pip install --user -r /requirements.txt && airflow db init && airflow db upgrade && airflow users create --username admin --password password --firstname Admin --lastname User --role Admin --email admin@example.com && airflow webserver && airflow connections add wizbi --conn_uri 'mysql+mysqlconnector://wizbi_user:wizbi_password@mysql:3306/wizbi_db' && airflow variables --import /opt/airflow/variables/variables.json --conflict-disposition=overwrite && airflow webserver"
    networks:
      - wizbi-proxy-net

  airflow_scheduler:
    build:
      context: ./airflow
      dockerfile: Dockerfile
    image: wizbi-airflow:latest
    container_name: airflow_scheduler
    depends_on:
      - mysql
      - airflow
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: mysql+mysqlconnector://airflow:airflow@mysql:3306/airflow
      AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
      AIRFLOW__WEBSERVER__RBAC: 'True'
      AIRFLOW__CORE__TEST_CONNECTION: 'Enabled'
      AIRFLOW__CORE__FERNET_KEY: 'ZmDfcTF7_60GrrY167zsiPd67pEvs0aGOv2oasOM1Pg='
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'False'
      AIRFLOW__CORE__DAGBAG_IMPORT_TIMEOUT: '300'
      AIRFLOW__WEBSERVER__SECRET_KEY: 'kjkjdyai'
      BATCH_SIZE: 500000
      GA_DAY_DATA: 20
      ENCRYPTION_KEY: ZmDfcTF7_60GrrY167zsiPd67pEvs0aGOv2oasOM1Pg=
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/dags/requirements.txt:/requirements.txt
    command: >
      bash -c "pip install --user -r /requirements.txt && airflow db upgrade && airflow scheduler"
    networks:
      - wizbi-proxy-net
     
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    depends_on:
      - mysql
    environment:      
      DB_USER: root
      DB_PASSWORD: password
      DB_SERVER: mysql
      DB_PORT: 3306      
      DB_DB: wizbi_db
      AIRFLOW_USERNAME: admin
      AIRFLOW_PASSWORD: password
      AIRFLOW_URL: http://airflow:8080
      JOB_EXECUTOR: airflow
      BATCH_SIZE: 500000
      GA_DAY_DATA: 20
      DB_DRIVER: mysql
      ENCRYPTION_KEY: ZmDfcTF7_60GrrY167zsiPd67pEvs0aGOv2oasOM1Pg=
      SECRET_KEY: kjkjdyaiusdyaiudsyaoiudas876387168327518375
      OPENAI_API_KEY: dummy
      API_ACCESS_LOG: /home/wizbi/backend/access_log
      API_ERROR_LOG: /home/wizbi/backend/error_log
      API_PORT: 8080
      API_HOST: 0.0.0.0
      BACKDOOR_USER_REGISTER: Y
      WIZBI_ENV: dev
      DBT_HOSTNAME: backend
      DBT_HOST_PORT: 22
      DBT_HOST_USERNAME: raj
      DBT_HOST_PASSWORD: ubuntu
      DBT_HOST_AUTH_TYPE: key
      DBT_HOST_PEM_FILE: /home/dev/wizbi.pem
      DBT_PROFILE_NAME: testing
      DBT_PROJECT_PATH: /home/raj/airflow/dags/dbt/
      DBT_PATH: /home/raj/apache-airflow/bin/dbt
    ports:
      - "8080:8080"
    volumes:
      - ./backend:/backend
      - ./backend/requirements.txt:/requirements.txt
    command: >
      bash -c " cd /backend && uvicorn main:app --host 0.0.0.0 --port 8080 "
    networks:
      - wizbi-proxy-net
      
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: wizbi-frontend:latest
    container_name: frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - wizbi-proxy-net

networks:
  wizbi-proxy-net:   
    # driver: bridge   

volumes:
  mysql_data:
    external: true
